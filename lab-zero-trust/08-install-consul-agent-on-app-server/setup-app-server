#!/bin/sh
#
# This script runs when the platform setup the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

export DOMAIN="opengov.co"
export NODENAME="app-server"
export DATACENTER="dc1"
export CONSUL_CONFIG_DIR="/etc/consul.d"
export CONSUL_CERT_DIR="${CONSUL_CONFIG_DIR}/certs"

mkdir -p ${CONSUL_CONFIG_DIR}certs ${CONSUL_CONFIG_DIR}/logs ${CONSUL_CONFIG_DIR}/data
set-workdir ${CONSUL_CONFIG_DIR}



echo "Create Consul Server Startup Script"
cat << EOF > /etc/systemd/system/consul.service
[Unit]
Description="HashiCorp Consul - A service mesh solution"
Documentation=https://www.consul.io/
Requires=network-online.target
After=network-online.target
ConditionFileNotEmpty=${CONSUL_CONFIG_DIR}/server.hcl

[Service]
EnvironmentFile=-${CONSUL_CONFIG_DIR}/consul.env
User=consul
Group=consul
ExecStart=/usr/bin/consul agent -config-dir=${CONSUL_CONFIG_DIR}
ExecReload=/bin/kill --signal HUP $MAINPID
KillMode=process
KillSignal=SIGTERM
Restart=on-failure
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
EOF




echo "Create Gossip file"
cat << EOF > ${CONSUL_CONFIG_DIR}/consul-gossip-encryption.hcl
encrypt = "$(vault kv get -format=json secret/consul/gossip | jq -r .data.data.key)"
EOF

echo "Create Consul-agent configuration"
cat << EOF > ${CONSUL_CONFIG_DIR}/consul-agent.hcl

node_name = "${NODENAME}"
server = false
datacenter = "${DATACENTER}"
data_dir = "${CONSUL_CONFIG_DIR}/data"
domain = "${DOMAIN}"

log_level = "INFO"
log_file = "${CONSUL_CONFIG_DIR}/logs/consul.log"
retry_join = ["consul-server"]

tls {
   defaults {
      ca_file = "${CONSUL_CERT_DIR}/${DOMAIN}-agent-ca.pem"

      verify_incoming = true
      verify_outgoing = true
   }
   internal_rpc {
      verify_server_hostname = true
   }
}

auto_encrypt {
  tls = true
}

EOF

systemctl daemon-reload

echo "Create CONSUL Config file"
cat << EOF > ${CONSUL_CONFIG_DIR}/consul.env
CONSUL_CACERT=${CONSUL_CERT_DIR}/${DOMAIN}-agent-ca.pem
EOF



exit 0
