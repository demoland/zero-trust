#!/bin/bash
#
# This script runs when the platform solve the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

export DOMAIN="opengov.co"
export NODENAME="vault-server"
export DATACENTER="dc1"
export CONSUL_CONFIG_DIR="/etc/consul.d"
export CONSUL_CERT_DIR="${CONSUL_CONFIG_DIR}/certs"

mkdir -p ${CONSUL_CONFIG_DIR}/certs ${CONSUL_CONFIG_DIR}/logs ${CONSUL_CONFIG_DIR}/data
set-workdir ${CONSUL_CONFIG_DIR}


echo "Create Gossip file"
cat << EOF > ${CONSUL_CONFIG_DIR}/consul-gossip-encryption.hcl
encrypt = "$(vault kv get -format=json secret/consul/gossip | jq -r .data.data.key)"
EOF

echo "Create Consul-agent configuration"
cat << EOF > ${CONSUL_CONFIG_DIR}/consul-agent.hcl

node_name = "${NODENAME}"
server = false
datacenter = "${DATACENTER}"
data_dir = "${CONSUL_CONFIG_DIR}/data"
domain = "${DOMAIN}"

log_level = "INFO"
log_file = "${CONSUL_CONFIG_DIR}/logs/consul.log"
retry_join = ["consul-server"]

tls {
   defaults {
      ca_file = "${CONSUL_CERT_DIR}/${DOMAIN}-agent-ca.pem"
      verify_incoming = true
      verify_outgoing = true
   }
   internal_rpc {
      verify_server_hostname = true
   }
}

auto_encrypt = {
  tls = true
}

EOF

chown -R consul:consul ${CONSUL_CONFIG_DIR}
systemctl start consul

exit 0
