#!/bin/bash
#
# This script runs when the platform solve the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

echo "Enable Gossip Encryption"
CONSUL_GOSSIP_KEY=$(consul keygen)
export DOMAIN="opengov.co"
export NODENAME="consul-server"
export DATACENTER="dc1"
export CONSUL_CONFIG_DIR="/etc/consul.d"
export CONSUL_CERT_DIR="/etc/consul.d/certs"

cat << EOF > ${CONSUL_CONFIG_DIR}/consul-gossip-encryption.hcl
encrypt = "${CONSUL_GOSSIP_KEY}"
EOF

echo "Add gossip to Vault"
vault kv put secret/consul/gossip key=${CONSUL_GOSSIP_KEY}

echo "Create Consul certs dir"
mkdir -p ${CONSUL_CERT_DIR}
cd ${CONSUL_CERT_DIR}

consul tls ca create -domain ${DOMAIN}
consul tls cert create -server -dc ${DATACENTER} -domain ${DOMAIN}

echo "Write certs to Vault"
vault kv put secret/consul/ca_file  key=@${CONSUL_CERT_DIR}/${DOMAIN}-agent-ca.pem
vault kv put secret/consul/cert_file key=@${CONSUL_CERT_DIR}/${DATACENTER}-server-${DOMAIN}-0.pem
vault kv put secret/consul/key_file key=@${CONSUL_CERT_DIR}/${DATACENTER}-server-${DOMAIN}-0-key.pem

echo "Create Consul server config"
sudo touch ${CONSUL_CONFIG_DIR}/server.hcl
sudo chown --recursive consul:consul ${CONSUL_CONFIG_DIR}
sudo chmod 640 ${CONSUL_CONFIG_DIR}/server.hcl

cat << EOF >> ${CONSUL_CONFIG_DIR}/server.hcl
server = true
domain = "${DOMAIN}"
bind_addr = "0.0.0.0"
client_addr = "0.0.0.0"

connect {
  enabled = true
}

addresses {
  grpc = "0.0.0.0"
}

ports {
  grpc_tls  = 8503
}

tls {
   defaults {
      ca_file = "${CONSUL_CERT_DIR}/${DOMAIN}-agent-ca.pem"
      cert_file = "${CONSUL_CERT_DIR}/${DATACENTER}-server-${DOMAIN}-0.pem"
      key_file = "${CONSUL_CERT_DIR}/${DATACENTER}-server-${DOMAIN}-0-key.pem"

      verify_incoming = true
      verify_outgoing = true
   }
   internal_rpc {
      verify_server_hostname = true
   }
}

auto_encrypt {
  allow_tls = true
}

ui_config {
  enabled = true
}

EOF



echo "Start the Consul Server"
systemctl start consul

# exit 0
